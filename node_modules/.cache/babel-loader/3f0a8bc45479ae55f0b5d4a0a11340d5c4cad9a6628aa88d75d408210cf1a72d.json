{"ast":null,"code":"var _jsxFileName = \"/Users/pravalikaattada/Desktop/React course udemy/connectingTo database/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // if we use fectchStarShips as a dependency we will fall into loop as, this function changes whenever this any of the state in this fucntion changes.\n  // so we are supposed to use useCallback()\n  const fectchStarShips = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://react-http-768c0-default-rtdb.firebaseio.com/movies.json\");\n      const data = await response.json();\n      // response.ok\n      // response.ok which basically tells whether the response was succesfull or not.\n      // response.status which holds the response status code\n      if (!response.ok) {\n        throw new Error(\"something went wrong!!\");\n      }\n      const transformedData = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedData);\n    } catch {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fectchStarShips();\n  }, []);\n  async function addMovieHandler(movie) {\n    const response = await fetch(\"https://react-http-768c0-default-rtdb.firebaseio.com/movies.json\", {\n      method: \"POST\",\n      body: JSON.stringify(movie),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n  }\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"found no movies\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 17\n  }, this);\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading !!........!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fectchStarShips,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"usnLlrVdrJFyGmg4oUKrCE6TjSk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","MoviesList","App","movies","setMovies","isLoading","setIsLoading","error","setError","fectchStarShips","response","fetch","data","json","ok","Error","transformedData","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","addMovieHandler","movie","method","body","JSON","stringify","headers","content","length"],"sources":["/Users/pravalikaattada/Desktop/React course udemy/connectingTo database/src/App.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // if we use fectchStarShips as a dependency we will fall into loop as, this function changes whenever this any of the state in this fucntion changes.\n  // so we are supposed to use useCallback()\n  const fectchStarShips = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://react-http-768c0-default-rtdb.firebaseio.com/movies.json\"\n      );\n      const data = await response.json();\n      // response.ok\n      // response.ok which basically tells whether the response was succesfull or not.\n      // response.status which holds the response status code\n      if (!response.ok) {\n        throw new Error(\"something went wrong!!\");\n      }\n      const transformedData = data.results.map((movieData) => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date,\n        };\n      });\n      setMovies(transformedData);\n    } catch {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fectchStarShips();\n  }, []);\n\n  async function addMovieHandler(movie) {\n    const response = await fetch(\n      \"https://react-http-768c0-default-rtdb.firebaseio.com/movies.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(movie),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    const data = await response.json();\n  }\n\n  let content = <p>found no movies</p>;\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />;\n  }\n  if (error) {\n    content = <p>{error}</p>;\n  }\n  if (isLoading) {\n    content = <p>Loading !!........!!</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fectchStarShips}>Fetch Movies</button>\n      </section>\n      <section>\n        {/* {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        {!isLoading && movies.length === 0 && !error && (\n          <p>Found no movies!!</p>\n        )}\n        {!isLoading && error && <p>{error}</p>}\n        {isLoading && <p>Loading !!........!!</p>} */}\n        {content}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE/D,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA;EACA,MAAMS,eAAe,GAAGX,WAAW,CAAC,YAAY;IAC9CQ,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAC1B,kEAAkE,CACnE;MACD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClC;MACA;MACA;MACA,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC3C;MACA,MAAMC,eAAe,GAAGJ,IAAI,CAACK,OAAO,CAACC,GAAG,CAAEC,SAAS,IAAK;QACtD,OAAO;UACLC,EAAE,EAAED,SAAS,CAACE,UAAU;UACxBC,KAAK,EAAEH,SAAS,CAACG,KAAK;UACtBC,WAAW,EAAEJ,SAAS,CAACK,aAAa;UACpCC,WAAW,EAAEN,SAAS,CAACO;QACzB,CAAC;MACH,CAAC,CAAC;MACFtB,SAAS,CAACY,eAAe,CAAC;IAC5B,CAAC,CAAC,MAAM;MACNR,QAAQ,CAACD,KAAK,CAACoB,OAAO,CAAC;IACzB;IACArB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAENP,SAAS,CAAC,MAAM;IACdU,eAAe,EAAE;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,eAAemB,eAAe,CAACC,KAAK,EAAE;IACpC,MAAMnB,QAAQ,GAAG,MAAMC,KAAK,CAC1B,kEAAkE,EAClE;MACEmB,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC;MAC3BK,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CACF;IACD,MAAMtB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EACpC;EAEA,IAAIsB,OAAO,gBAAG;IAAA,UAAG;EAAe;IAAA;IAAA;IAAA;EAAA,QAAI;EACpC,IAAIhC,MAAM,CAACiC,MAAM,GAAG,CAAC,EAAE;IACrBD,OAAO,gBAAG,QAAC,UAAU;MAAC,MAAM,EAAEhC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EAC1C;EACA,IAAII,KAAK,EAAE;IACT4B,OAAO,gBAAG;MAAA,UAAI5B;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK;EAC1B;EACA,IAAIF,SAAS,EAAE;IACb8B,OAAO,gBAAG;MAAA,UAAG;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAI;EACvC;EAEA,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACb;MAAA,uBACE;QAAQ,OAAO,EAAE1B,eAAgB;QAAA,UAAC;MAAY;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QAC/C,eACV;MAAA,UAOG0B;IAAO;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACK;AAErB;AAAC,GAjFQjC,GAAG;AAAA,KAAHA,GAAG;AAmFZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}