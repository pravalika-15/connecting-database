{"ast":null,"code":"var _jsxFileName = \"/Users/pravalikaattada/Desktop/React course udemy/connectingTo database/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  async function fectchStarShips() {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n      const data = await response.json();\n      // response.ok\n      // response.ok which basically tells whether the response was succesfull or not.\n      // response.status which holds the response status code\n      if (!response.ok) {\n        throw new Error(\"something went wrong!!\");\n      }\n      const transformedData = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedData);\n      setIsLoading(false);\n    } catch {}\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fectchStarShips,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && movies.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 45\n      }, this), !isLoading && movies.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Found no movies!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 47\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading !!........!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vezdb8vhB13CXN34mRPCTGsOZDc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","App","movies","setMovies","isLoading","setIsLoading","error","setError","fectchStarShips","response","fetch","data","json","ok","Error","transformedData","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","length"],"sources":["/Users/pravalikaattada/Desktop/React course udemy/connectingTo database/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  async function fectchStarShips() {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n      const data = await response.json();\n      // response.ok\n      // response.ok which basically tells whether the response was succesfull or not.\n      // response.status which holds the response status code\n      if (!response.ok) {\n        throw new Error(\"something went wrong!!\");\n      }\n      const transformedData = data.results.map((movieData) => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date,\n        };\n      });\n      setMovies(transformedData);\n      setIsLoading(false);\n    } catch {}\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fectchStarShips}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        {!isLoading && movies.length === 0 && <p>Found no movies!!</p>}\n        {isLoading && <p>Loading !!........!!</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,eAAeS,eAAe,GAAG;IAC/BH,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;MAC5D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClC;MACA;MACA;MACA,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC3C;MACA,MAAMC,eAAe,GAAGJ,IAAI,CAACK,OAAO,CAACC,GAAG,CAAEC,SAAS,IAAK;QACtD,OAAO;UACLC,EAAE,EAAED,SAAS,CAACE,UAAU;UACxBC,KAAK,EAAEH,SAAS,CAACG,KAAK;UACtBC,WAAW,EAAEJ,SAAS,CAACK,aAAa;UACpCC,WAAW,EAAEN,SAAS,CAACO;QACzB,CAAC;MACH,CAAC,CAAC;MACFtB,SAAS,CAACY,eAAe,CAAC;MAC1BV,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,MAAM,CAAC;EACX;EAEA,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACb;MAAA,uBACE;QAAQ,OAAO,EAAEG,eAAgB;QAAA,UAAC;MAAY;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QAC/C,eACV;MAAA,WACG,CAACJ,SAAS,IAAIF,MAAM,CAACwB,MAAM,GAAG,CAAC,iBAAI,QAAC,UAAU;QAAC,MAAM,EAAExB;MAAO;QAAA;QAAA;QAAA;MAAA,QAAG,EACjE,CAACE,SAAS,IAAIF,MAAM,CAACwB,MAAM,KAAK,CAAC,iBAAI;QAAA,UAAG;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAI,EAC7DtB,SAAS,iBAAI;QAAA,UAAG;MAAoB;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACjC;EAAA;IAAA;IAAA;IAAA;EAAA,QACK;AAErB;AAAC,GAzCQH,GAAG;AAAA,KAAHA,GAAG;AA2CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}